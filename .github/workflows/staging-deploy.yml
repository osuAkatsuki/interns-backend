name: staging-deploy

on:
  push:
    branches:
      - main
      - INTRN-243-setup-ci-pipeline

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out latest commit
        uses: actions/checkout@v3

      - name: Install digitalocean command line interface
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log-in to digitalocean container registry
        run: doctl registry login --expiry-seconds 600

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: registry.digitalocean.com/akatsuki/interns-backend:latest
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/interns-backend.tar

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: interns-backend
          path: /tmp/interns-backend.tar

  unit-tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out latest commit
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download built image artifact
        uses: actions/download-artifact@v3
        with:
          name: interns-backend
          path: /tmp/

      - name: Load image
        run: |
          docker load --input /tmp/interns-backend.tar
          # docker image ls -a

      - name: Run containers
        run: docker-compose up -d interns-backend

      - name: Run tests
        run: docker-compose exec -T users-service /scripts/run-tests.sh

      - name: Stop containers
        if: always()
        run: docker-compose down

  integration-tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out latest commit
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download built image artifact
        uses: actions/download-artifact@v3
        with:
          name: interns-backend
          path: /tmp/

      - name: Load image
        run: |
          docker load --input /tmp/interns-backend.tar
          # docker image ls -a

      - name: Run containers
        run: docker-compose up -d interns-backend postgres redis

      - name: Run tests
        run: docker-compose exec -T users-service /scripts/run-tests.sh

      - name: Stop containers
        if: always()
        run: docker-compose down

  staging-deploy:
    runs-on: ubuntu-latest
    needs: [build, unit-tests, integration-tests]

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download built image artifact
        uses: actions/download-artifact@v3
        with:
          name: interns-backend
          path: /tmp/

      - name: Load image
        run: |
          docker load --input /tmp/interns-backend.tar
          # docker image ls -a

      - name: Save kubeconfig from digitalocean
        run: doctl k8s cluster kubeconfig save --expiry-seconds 600 akatsuki-staging

      - name: Install helm
        uses: azure/setup-helm@v3
        with:
          version: "latest"
          token: ${{ secrets.GITHUB_TOKEN }}
        id: install

      - name: Install helm-diff
        run: helm plugin install https://github.com/databus23/helm-diff

      - name: Checkout common-helm-charts repo
        uses: actions/checkout@v3
        with:
          repository: osuAkatsuki/common-helm-charts
          token: ${{ secrets.COMMON_HELM_CHARTS_PAT }}
          path: common-helm-charts

      - name: Show manifest diff since previous release
        run: |
          helm diff upgrade \
          --allow-unreleased \
          --values chart/values.yaml \
          interns-backend-staging \
          common-helm-charts/microservice-base/

      - name: Deploy service to staging cluster
        run: |
          helm upgrade \
            --install \
            --atomic \
            --wait --timeout 480s \
            --values chart/values.yaml \
            interns-backend-staging \
            common-helm-charts/microservice-base/
